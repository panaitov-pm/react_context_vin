{"version":3,"sources":["Types/Storage/StorageItem.ts","View/Module/Animation/Fade.tsx","View/Page/Page404.tsx","Helper/Route/getNavRoutes.ts","Context/VIN/VINContext.tsx","Context/VIN/withVIN.tsx","Helper/SearchForm/getOnlyLatinAndNumberValue.ts","Helper/SearchForm/isValidVINMaxLength.ts","Helper/String/isEmpty.ts","Helper/SearchForm/getMessageError.ts","View/Section/SearchForm/SearchForm.tsx","View/Section/DecodeVIN/DecodeVINList.tsx","View/Module/SearchedVINList/SearchVINList.tsx","System/Config.tsx","Helper/SearchForm/getDecodeVIN.ts","Hook/useQueryDecodeVIN.ts","Helper/Storage/removeItem.ts","Context/VIN/VINStore.tsx","View/Page/Home.tsx","Hook/useQueryVehicleVariableList.ts","Helper/VariableList/getDescription.ts","View/Module/VariableList/VariableListInfo.tsx","Helper/Storage/getItem.ts","Helper/Storage/setItem.ts","View/Page/VariableList.tsx","Helper/VariableList/getVariable.ts","View/Module/VariableList/VariableError.tsx","View/Module/VariableList/VariableDesc.tsx","View/Page/Variable.tsx","System/Routes.ts","View/Section/PageNavigation.tsx","View/App.tsx","serviceWorker.ts","index.tsx"],"names":["StorageItem","Fade","children","delay","className","useState","showNode","setShowNode","useEffect","setTimeout","CSSTransition","in","timeout","classNames","Page404","title","href","getNavRoutes","routes","navItems","navItemsLowerCase","map","navItem","toLowerCase","filter","route","includes","initialDecodeVIN","Message","SearchCriteria","Results","VINContext","createContext","searchVIN","setSearchVIN","decodeVIN","setDecodeVIN","vehicleVariableList","setVehicleVariableList","searchedVINList","addSearchedVIN","searchedVIN","withVIN","Component","props","Consumer","VIN","getOnlyLatinAndNumberValue","value","replace","isValidVINMaxLength","length","isEmpty","getMessageError","error","messageError","SearchForm","queryDecodeVIN","vin","setVIN","inputError","setInputError","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","onChange","target","searchValue","toUpperCase","DecodeVINList","isLoadingDecodeVIN","result","index","key","VariableId","Variable","Value","SearchVINList","slice","onClick","substr","onQueryClick","urlConfig","url","getDecodeVIN","response","data","useQueryDecodeVIN","useAxios","method","reFetch","loading","removeItem","sessionStorage","VINActions","Home","searchCriteria","VEHICLE_VARIABLE_LIST","useQueryVehicleVariableList","queryVehicleVariableList","getDescription","variable","Description","desc","HTMLReactParser","VariableListInfo","history","useHistory","ID","push","Name","getItem","byDefault","item","JSON","parse","setItem","stringify","VariableList","getVariable","variableId","VariableError","VariableDesc","params","useParams","PageRoutes","exact","path","component","PageNavigation","to","reducer","prevState","action","SET_DECODE_VIN","SET__VEHICLE_VARIABLE_LIST","SET_SEARCH_VIN","ADD_SEARCHED_VIN","VINStore","getDefaultProps","vinInfo","useContext","useReducer","dispatch","state","Provider","defaultProps","App","render","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11319a75.chunk.js","sourcesContent":["enum StorageItem {\n    VEHICLE_VARIABLE_LIST= 'vehicle_variable_list',\n}\n\nexport default StorageItem\n","import React, { useEffect, useState } from 'react';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\n/**\n * @interface Props\n */\ninterface Props {\n    delay: number\n    className: string\n}\n\nconst Fade: React.FC<Props> = ({ children, delay, className }) => {\n    const [showNode, setShowNode] = useState(false);\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setShowNode(true);\n        }, delay);\n\n        return () => setShowNode(false);\n    }, []);\n\n    return (\n        <CSSTransition\n            in={showNode}\n            timeout={500}\n            classNames={className}\n        >\n            {children}\n        </CSSTransition>\n    );\n};\n\nexport default Fade;\n","import React from 'react';\nimport Fade from '../Module/Animation/Fade';\n\n/**\n * @interface Props\n */\ninterface Props {\n    title?: string,\n}\n\nconst Page404: React.FC<Props> = ({ title = 'Page not found' }) => {\n    return (\n        <>\n            <Fade delay={0} className=\"fade-up\">\n                <h1 className=\"fade-up\">{title}</h1>\n            </Fade>\n            <Fade delay={100} className=\"fade-up\">\n                <a className=\"variable__link-error fade-up\" href=\"/\">Back to home</a>\n            </Fade>\n        </>\n    );\n};\n\nexport default Page404;\n","import { IPageRoute } from '../../System/Routes';\n\nconst getNavRoutes = (routes: IPageRoute[], navItems: string[]): IPageRoute[] => {\n    const navItemsLowerCase = navItems.map(navItem => navItem.toLowerCase());\n\n    return routes.filter(route => navItemsLowerCase.includes(route.title.toLowerCase()));\n};\n\nexport default getNavRoutes;\n","import { createContext } from 'react';\nimport IDecodeVIN from '../../Types/VIN/DecodeVIN';\nimport IVehicleVariableList from '../../Types/VIN/VehicleVariableList';\n\n/**\n * @interface VINContextProps\n */\nexport interface VINContextProps {\n    searchVIN: string;\n    setSearchVIN: (searchVIN: string) => void;\n\n    decodeVIN: IDecodeVIN;\n    setDecodeVIN: (decodeVIN: IDecodeVIN) => void;\n\n    vehicleVariableList: IVehicleVariableList;\n    setVehicleVariableList: (vehicleVariableList: IVehicleVariableList) => void;\n\n    searchedVINList: string[],\n    addSearchedVIN: (searchedVIN: string) => void;\n}\n\nexport const initialDecodeVIN = {\n    Message: '',\n    SearchCriteria: '',\n    Results: [],\n};\n\n/**\n * @type {React.Context<VINContextProps>}\n */\nconst VINContext = createContext<VINContextProps>({\n    searchVIN: '',\n    setSearchVIN: (searchVIN: string) => {\n    },\n\n    decodeVIN: initialDecodeVIN,\n    setDecodeVIN: (decodeVIN: IDecodeVIN) => {\n    },\n\n    vehicleVariableList: initialDecodeVIN,\n    setVehicleVariableList: (vehicleVariableList: IVehicleVariableList) => {\n    },\n\n    searchedVINList: [],\n    addSearchedVIN: (searchedVIN: string) => {\n    },\n});\n\nexport default VINContext;\n","import React from 'react';\nimport { ComponentType } from 'react';\nimport VINContext, { VINContextProps } from './VINContext';\n\n/**\n * @param {React.ComponentType<Props & VINContextProps>} Component\n * @return {(props: Props) => any}\n */\nconst withVIN = <Props extends object>(Component: ComponentType<Props & VINContextProps>) => (props: Props) => (\n    <VINContext.Consumer>\n        {VIN => <Component {...props} {...VIN} />}\n    </VINContext.Consumer>\n);\n\nexport default withVIN;\n","const getOnlyLatinAndNumberValue = (value: string) => {\n    if (typeof value !== 'string') return '';\n\n    return value.replace(/[^A-Z0-9]+/ig, '');\n};\n\nexport default getOnlyLatinAndNumberValue\n","/**\n * @param {string} value\n * @return {boolean}\n */\nconst isValidVINMaxLength = (value: string): boolean => value.length <= 17;\n\nexport default isValidVINMaxLength;\n","/**\n * @param {string} value\n * @return {boolean}\n */\nconst isEmpty = (value: string | null): boolean => value ? value.length === 0 : true;\n\nexport default isEmpty;\n","const getMessageError = (error: boolean, messageError: string): string | null => {\n    if (!error) return null;\n\n    return messageError;\n};\n\nexport default getMessageError;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport withVIN from '../../../Context/VIN/withVIN';\nimport getOnlyLatinAndNumberValue from '../../../Helper/SearchForm/getOnlyLatinAndNumberValue';\nimport isValidVINMaxLength from '../../../Helper/SearchForm/isValidVINMaxLength';\nimport isEmpty from '../../../Helper/String/isEmpty';\nimport getMessageError from '../../../Helper/SearchForm/getMessageError';\n\n/**\n * @interface Props\n */\ninterface Props {\n    queryDecodeVIN: () => void;\n}\n\nconst SearchForm: React.FC<Props> = withVIN(({ decodeVIN, queryDecodeVIN, searchVIN, setSearchVIN }): any => {\n\n    const [vin, setVIN] = useState('');\n    const [inputError, setInputError] = useState(false);\n\n    // Clear search field after success request decodeVIN\n    useEffect(() => {\n        setVIN('');\n    }, [decodeVIN.SearchCriteria]);\n\n\n    /**\n     * @param {any} value\n     */\n    const onChangeVIN = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>): void => {\n\n        // Set vin when length <= 17, then transform vin toUpper\n        if (isValidVINMaxLength(value)) {\n            const searchValue = getOnlyLatinAndNumberValue(value).toUpperCase();\n\n            setInputError(false);\n            setSearchVIN(searchValue);\n            setVIN(searchValue);\n        }\n    };\n\n    /**\n     * @param {React.FormEvent} e\n     */\n    const onSubmit = (e: React.FormEvent): void => {\n        e.preventDefault();\n\n        // Show error message and stop query, when field is empty\n        if (isEmpty(searchVIN)) {\n            setInputError(true);\n            return;\n        }\n\n        queryDecodeVIN();\n    };\n\n    return (\n        <form\n            className=\"search-form\"\n            onSubmit={onSubmit}\n        >\n            <div className={classNames('search-form__field-wrap', {\n                'has-error': inputError,\n            })}>\n                <div className=\"search-form__field\">\n                    <label htmlFor=\"search\" className=\"screen-reader-text\">Search</label>\n                    <input\n                        id=\"search\"\n                        type=\"search\"\n                        className=\"search-form__input\"\n                        placeholder=\"Enter search VIN...\"\n                        value={vin}\n                        onChange={onChangeVIN}\n                    />\n                    <button type=\"submit\" className=\"search-form__button\">Search</button>\n                </div>\n                <div className=\"search-form__field-help\">\n                    {\n                        getMessageError(inputError, 'Field is not be empty')\n                    }\n                </div>\n            </div>\n        </form>\n    );\n});\n\nexport default SearchForm;\n","import React from 'react';\nimport withVIN from '../../../Context/VIN/withVIN';\nimport { IDecodeVINResult } from '../../../Types/VIN/DecodeVIN';\nimport Fade from '../../Module/Animation/Fade';\n\n/**\n * @interface Props\n */\ninterface Props {\n    isLoadingDecodeVIN: boolean;\n}\n\nconst DecodeVINList: React.FC<Props> = withVIN(({ isLoadingDecodeVIN, decodeVIN }): any => {\n\n    if (isLoadingDecodeVIN) return <h1>Loading....</h1>;\n\n    if (decodeVIN.Results.length === 0) return null;\n\n    return (\n        <ol className=\"decode-list\">\n            <Fade delay={0} className=\"fade\">\n                <li className=\"decode-list__item fade\">\n                    <span>#</span>\n                    <span>Variable</span>\n                    <span>Value</span>\n                </li>\n            </Fade>\n            {\n                decodeVIN.Results.map((result: IDecodeVINResult, index: number) => (\n                    <Fade delay={index * 10} className=\"fade-down\">\n                        <li key={result.VariableId} className=\"decode-list__item fade-down\">\n                            <span>{index + 1}</span>\n                            <span>{result.Variable}</span>\n                            <span>{result.Value}</span>\n                        </li>\n                    </Fade>\n                ))\n            }\n        </ol>\n    );\n});\n\nexport default DecodeVINList;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport withVIN from '../../../Context/VIN/withVIN';\n\n/**\n * @interface Props\n */\ninterface Props {\n    queryDecodeVIN: () => void;\n}\n\nconst SearchVINList: React.FC<Props> = withVIN(({ queryDecodeVIN, setSearchVIN, searchedVINList, decodeVIN }) => {\n\n    /**\n     * @param {string} searchedVIN\n     */\n    const onQueryClick = (searchedVIN: string): void => {\n        setSearchVIN(searchedVIN.substr(4, searchedVIN.length));\n        queryDecodeVIN();\n    };\n\n    return (\n        <ul className=\"searched-list\">\n            <li className=\"searched-list__item\">Searched VIN</li>\n            {\n                searchedVINList.slice(0, 5).map((searchedVIN: string, index: number) => (\n                    <li\n                        key={`${searchedVIN}_${index}`}\n                        className=\"searched-list__item\"\n                    >\n                        <button\n                            className={classNames('searched-list__btn', {\n                                'is-active': searchedVIN === decodeVIN.SearchCriteria\n                            })}\n                            type=\"button\"\n                            onClick={() => onQueryClick(searchedVIN)}\n                        >\n                            {searchedVIN}\n                        </button>\n                    </li>\n                ))\n            }\n        </ul>\n    );\n});\n\nexport default SearchVINList;\n","\nexport const urlConfig = {\n    // API\n    api: {\n        url: 'https://vpic.nhtsa.dot.gov/api',\n    },\n\n    variables: {\n        url: 'variables'\n    },\n};\n","import IDecodeVIN, { IDecodeVINResult } from '../../Types/VIN/DecodeVIN';\nimport { initialDecodeVIN } from '../../Context/VIN/VINContext';\nimport isEmpty from '../String/isEmpty';\n\n/**\n * @param response\n * @return {IDecodeVIN | {}}\n */\nconst getDecodeVIN = (response: any): IDecodeVIN => {\n    if (!response) return initialDecodeVIN;\n\n    const { data } = response;\n    const { Message, SearchCriteria, Results } = data as IDecodeVIN;\n\n    return {\n        Message,\n        SearchCriteria,\n        Results: Results ? Results.filter((result: IDecodeVINResult) => !isEmpty(result.Value)) : [],\n    };\n\n};\n\nexport default getDecodeVIN;\n","import useAxios from '@use-hooks/axios';\nimport { urlConfig } from '../System/Config';\nimport getDecodeVIN from '../Helper/SearchForm/getDecodeVIN';\n\nconst useQueryDecodeVIN = (vin: string) => {\n\n    const { response, reFetch, error, loading } = useAxios({\n        url: `${urlConfig.api.url}/vehicles/decodevin/${vin}?format=json`,\n        method: 'GET',\n    });\n\n    return {\n        response,\n        error,\n        loading,\n        decodeVIN: getDecodeVIN(response),\n        queryDecodeVIN: reFetch\n    };\n};\n\nexport default useQueryDecodeVIN;\n","/**\n * @param {string} key\n */\nconst removeItem = (key: string): void => {\n   sessionStorage.removeItem(key);\n};\n\nexport default removeItem;\n","import React, { Reducer, useContext, useReducer } from 'react';\nimport VINContext, { VINContextProps } from './VINContext';\nimport IDecodeVIN from '../../Types/VIN/DecodeVIN';\nimport IVehicleVariableList from '../../Types/VIN/VehicleVariableList';\n\n/**\n * @interface Props\n */\ninterface Props {\n    getDefaultProps: () => Partial<VINContextProps>;\n}\n\nexport enum VINActions {\n    SET_SEARCH_VIN = 'SET_SEARCH_VIN',\n    SET_DECODE_VIN = 'SET_DECODE_VIN',\n    SET__VEHICLE_VARIABLE_LIST = 'SET__VEHICLE_VARIABLE_LIST',\n    ADD_SEARCHED_VIN = 'ADD_SEARCHED_VIN',\n}\n\n/**\n * @interface Action\n */\ninterface Action {\n    type: string;\n    decodeVIN?: IDecodeVIN;\n    vehicleVariableList?: IVehicleVariableList;\n    searchedVIN?: string;\n    searchVIN?: string;\n}\n\n/**\n * @param {VINContextProps} prevState\n * @param {Action} action\n * @return {VINContextProps}\n */\nconst reducer: Reducer<VINContextProps, Action> = (prevState, action): VINContextProps => {\n    switch (action.type) {\n        case VINActions.SET_DECODE_VIN:\n            return {\n                ...prevState,\n                decodeVIN: {\n                    ...prevState.decodeVIN,\n                    ...action.decodeVIN,\n                }\n            };\n            case VINActions.SET__VEHICLE_VARIABLE_LIST:\n            return {\n                ...prevState,\n                vehicleVariableList: {\n                    ...prevState.setVehicleVariableList,\n                    ...action.vehicleVariableList,\n                }\n            };\n        case VINActions.SET_SEARCH_VIN:\n            return {\n                ...prevState,\n                searchVIN: action.searchVIN,\n            };\n        case VINActions.ADD_SEARCHED_VIN:\n            return {\n                ...prevState,\n                searchedVINList: [\n                    action.searchedVIN,\n                    ...prevState.searchedVINList,\n                ],\n            };\n        default:\n            return prevState;\n    }\n};\n\n/**\n * @param {React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined} children\n * @param {() => Partial<VINContextProps>} getDefaultProps\n * @return {any}\n * @constructor\n */\nconst VINStore: React.FC<Props> = ({ children, getDefaultProps }) => {\n\n    const vinInfo = useContext<VINContextProps>(VINContext);\n\n    const [state, dispatch] = useReducer(reducer, {\n        ...vinInfo,\n\n        setSearchVIN: (searchVIN: string) => dispatch({ type: VINActions.SET_SEARCH_VIN, searchVIN }),\n\n        setDecodeVIN: (decodeVIN: IDecodeVIN) => dispatch({ type: VINActions.SET_DECODE_VIN, decodeVIN }),\n\n        setVehicleVariableList: (vehicleVariableList: IVehicleVariableList) => dispatch({ type: VINActions.SET__VEHICLE_VARIABLE_LIST, vehicleVariableList }),\n\n        addSearchedVIN: (searchedVIN: string) => dispatch({ type: VINActions.ADD_SEARCHED_VIN, searchedVIN }),\n\n        ...getDefaultProps(),\n    });\n//TODO save searched VINs\n    //  setItem('tasks', JSON.stringify(state.tasks));\n\n    return (\n        <VINContext.Provider value={{ ...state, ...getDefaultProps() }}>\n            {children}\n        </VINContext.Provider>\n    );\n};\n\nVINStore.defaultProps = {\n    getDefaultProps: () => ({}),\n};\n\nexport default VINStore;\n","import React, { useEffect } from 'react';\nimport SearchForm from '../Section/SearchForm/SearchForm';\nimport DecodeVINList from '../Section/DecodeVIN/DecodeVINList';\nimport SearchVINList from '../Module/SearchedVINList/SearchVINList';\nimport useQueryDecodeVIN from '../../Hook/useQueryDecodeVIN';\nimport withVIN from '../../Context/VIN/withVIN';\nimport removeItem from '../../Helper/Storage/removeItem';\nimport StorageItem from '../../Types/Storage/StorageItem';\nimport { initialDecodeVIN } from '../../Context/VIN/VINContext';\nimport Fade from '../Module/Animation/Fade';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst Home: React.FC<Props> = withVIN(({ setDecodeVIN, setVehicleVariableList, addSearchedVIN, searchVIN, setSearchVIN, searchedVINList }) => {\n\n    // Query VIN search\n    const { response, queryDecodeVIN, loading, decodeVIN } = useQueryDecodeVIN(searchVIN);\n    const searchCriteria = response?.data?.SearchCriteria;\n\n    // Clean VehicleVariableList for new request\n    useEffect(() => {\n        removeItem(StorageItem.VEHICLE_VARIABLE_LIST);\n        setVehicleVariableList(initialDecodeVIN);\n    }, []);\n\n    // Set decodeVIN, clear input value\n    useEffect(() => {\n        setSearchVIN('');\n\n        searchCriteria && setDecodeVIN(decodeVIN);\n\n    }, [searchCriteria]);\n\n    // Set searched VIN\n    useEffect(() => {\n        (searchCriteria && !searchedVINList.includes(searchCriteria)) &&\n        addSearchedVIN(searchCriteria);\n\n    }, [searchCriteria]);\n\n    return (\n        <main className=\"main\">\n            <aside className=\"sidebar\">\n                <Fade delay={0} className=\"fade-up\">\n                    <SearchVINList\n                        queryDecodeVIN={queryDecodeVIN}\n                    />\n                </Fade>\n            </aside>\n            <section className=\"decode-info\">\n                <Fade delay={0} className=\"fade-up\">\n                    <SearchForm\n                        queryDecodeVIN={queryDecodeVIN}\n                    />\n                </Fade>\n                <DecodeVINList\n                    isLoadingDecodeVIN={loading}\n                />\n            </section>\n        </main>\n    );\n});\n\nexport default Home;\n","import useAxios from '@use-hooks/axios';\nimport { urlConfig } from '../System/Config';\n\nconst useQueryVehicleVariableList = () => {\n\n    const { response, reFetch, error, loading } = useAxios({\n        url: `${urlConfig.api.url}/vehicles/getvehiclevariablelist?format=json`,\n        method: 'GET',\n    });\n\n    return {\n        response,\n        error,\n        loading,\n        queryVehicleVariableList: reFetch\n    };\n};\n\nexport default useQueryVehicleVariableList;\n","import HTMLReactParser from 'html-react-parser';\n\nconst getDescription = (variable) => {\n    if (!variable) return '';\n\n    const {Description} = variable;\n    const desc = Description ? HTMLReactParser(Description) : null;\n\n    return desc !== 'Error Text' && desc;\n};\n\nexport default getDescription;\n\n","import React from 'react';\nimport getDescription from '../../../Helper/VariableList/getDescription';\nimport withVIN from '../../../Context/VIN/withVIN';\nimport { useHistory } from 'react-router-dom';\nimport Fade from '../Animation/Fade';\nimport { urlConfig } from '../../../System/Config';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst VariableListInfo: React.FC<Props> = withVIN(({ vehicleVariableList }) => {\n    const history = useHistory();\n\n    return (\n        <>\n            <Fade delay={0} className=\"fade\">\n                <h1 className=\"fade\">Vehicle Variables</h1>\n            </Fade>\n            <ol className=\"variable-list\">\n                {\n                    vehicleVariableList.Results && (\n                        vehicleVariableList.Results.map((variable, index: number) => {\n\n                            if (!getDescription(variable)) return null;\n\n                            return (\n                                <Fade delay={index * 10} className=\"fade-down\">\n                                    <li\n                                        key={variable.ID}\n                                        className=\"variable-list__item fade-down\"\n                                    >\n                                        <a\n                                            href=\"/\" className=\"variable-list__link\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                history.push(`/${urlConfig.variables.url}/${variable.ID}`)\n                                            }}\n                                        >\n                                            <span className=\"variable-list__index\">{index + 1}</span>\n                                            <span className=\"variable-list__name\">{variable.Name}</span>\n                                        </a>\n                                    </li>\n                                </Fade>\n                            )\n                        })\n                    )\n                }\n            </ol>\n        </>\n    );\n});\n\nexport default VariableListInfo;\n","/**\n * @param {string} key\n * @param byDefault\n * @return {any}\n */\nconst getItem = (key: string, byDefault: any) => {\n    const item = sessionStorage.getItem(key);\n\n    if (!item) return byDefault;\n\n    return JSON.parse(item);\n};\n\nexport default getItem;\n","/**\n * @param {string} key\n * @param value\n */\nconst setItem = (key: string, value: any): void => {\n    sessionStorage.setItem(key, JSON.stringify(value));\n};\n\nexport default setItem;\n","import React, { useEffect } from 'react';\n\nimport withVIN from '../../Context/VIN/withVIN';\nimport useQueryVehicleVariableList from '../../Hook/useQueryVehicleVariableList';\nimport VariableListInfo from '../Module/VariableList/VariableListInfo';\nimport getItem from '../../Helper/Storage/getItem';\nimport setItem from '../../Helper/Storage/setItem';\nimport StorageItem from '../../Types/Storage/StorageItem';\nimport Page404 from './Page404';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst VariableList: React.FC<Props> = withVIN(({ vehicleVariableList, setVehicleVariableList }) => {\n\n    const { response, error, loading, queryVehicleVariableList } = useQueryVehicleVariableList();\n\n    // Send query if storage has no VEHICLE_VARIABLE_LIST item\n    useEffect(() => {\n        const item = getItem(StorageItem.VEHICLE_VARIABLE_LIST, null);\n\n        !item && queryVehicleVariableList();\n\n        item && setVehicleVariableList(item);\n    }, []);\n\n    // set and save to storage VehicleVariableList when request is success\n    useEffect(() => {\n        if (!response?.data?.Results) return;\n\n        setVehicleVariableList(response.data);\n        setItem(StorageItem.VEHICLE_VARIABLE_LIST, response.data);\n\n    }, [response?.data?.Results]);\n\n    // Show error message when request has error\n    if (error || typeof response?.data === 'string') return <Page404 title=\"No results\" />;\n\n    return (\n        <section className=\"variable-info\">\n            {\n                loading\n                    ? <h1>Loading...</h1>\n                    : <VariableListInfo />\n            }\n        </section>\n    );\n});\n\nexport default VariableList;\n","import IVehicleVariableList, { IVehicleVariableListResult } from '../../Types/VIN/VehicleVariableList';\n\nconst getVariable = (vehicleVariableList: IVehicleVariableList, variableId: string): IVehicleVariableListResult | null => {\n   if (!vehicleVariableList) return null;\n\n   return vehicleVariableList.Results.filter(variable => variable.ID === +variableId)[0];\n};\n\nexport default getVariable;\n\n","import React from 'react';\nimport Fade from '../Animation/Fade';\nimport { urlConfig } from '../../../System/Config';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst VariableError: React.FC<Props> = () => {\n    return (\n        <>\n            <Fade delay={0} className=\"fade-up\">\n                <h1 className=\"fade-up\">No description</h1>\n            </Fade>\n            <Fade delay={100} className=\"fade-up\">\n                <a className=\"variable__link-error fade-up\" href={`/${urlConfig.variables.url}`}>Back to Variables</a>\n            </Fade>\n        </>\n    );\n};\n\nexport default VariableError;\n","import React from 'react';\nimport { IVehicleVariableListResult } from '../../../Types/VIN/VehicleVariableList';\nimport getDescription from '../../../Helper/VariableList/getDescription';\nimport Fade from '../Animation/Fade';\n\n/**\n * @interface Props\n */\ninterface Props {\n    variable: IVehicleVariableListResult\n}\n\nconst VariableDesc: React.FC<Props> = ({ variable }) => {\n    return (\n        <>\n            <Fade delay={0} className=\"fade-up\">\n                <h1 className=\"fade-up\">{variable.Name}</h1>\n            </Fade>\n            <Fade delay={100} className=\"fade-up\">\n                <div className=\"variable__desc fade-up\">{getDescription(variable)}</div>\n            </Fade>\n        </>\n    );\n};\n\nexport default VariableDesc;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport withVIN from '../../Context/VIN/withVIN';\nimport { IParams } from '../../Types/History/Params';\nimport getVariable from '../../Helper/VariableList/getVariable';\nimport VariableError from '../Module/VariableList/VariableError';\nimport VariableDesc from '../Module/VariableList/VariableDesc';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst Variable: React.FC<Props> = withVIN(({ vehicleVariableList, decodeVIN }) => {\n    const params = useParams<IParams>();\n\n    const variable = getVariable(vehicleVariableList, params.variableId);\n\n    return (\n        <section className=\"variable-info\">\n            {\n                (!variable)\n                    ? <VariableError />\n                    : <VariableDesc variable={variable} />\n            }\n        </section>\n    );\n});\n\nexport default Variable;\n","import Home from '../View/Page/Home';\nimport VariableList from '../View/Page/VariableList';\nimport Variable from '../View/Page/Variable';\nimport { urlConfig } from './Config';\n\nexport interface IPageRoute {\n    exact: boolean,\n    path: string,\n    component: any,\n    title: string,\n}\n\nconst PageRoutes: IPageRoute[] = [\n    {\n        exact: true,\n        path: '/',\n        component: Home,\n        title: 'Home',\n    },\n    {\n        exact: true,\n        path: `/${urlConfig.variables.url}`,\n        component: VariableList,\n        title: 'Variables',\n    },\n    {\n        exact: false,\n        path: `/${urlConfig.variables.url}/:variableId`,\n        component: Variable,\n        title: 'Variable',\n    }\n];\n\nexport default PageRoutes\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport getNavRoutes from '../../Helper/Route/getNavRoutes';\nimport PageRoutes, { IPageRoute } from '../../System/Routes';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst PageNavigation: React.FC<Props> = (): any => {\n    return (\n        <nav className=\"navbar container\">\n            <ul className=\"navbar-list\">\n                {\n                    getNavRoutes(PageRoutes, ['home', 'variables']).map((route: IPageRoute, index: number) => (\n                        <li\n                            key={index}\n                            className=\"navbar-list__item\"\n                        >\n                            <NavLink\n                                exact={route.exact}\n                                to={route.path}\n                                className=\"navbar-list__link\"\n                            >\n                                {route.title}\n                            </NavLink>\n                        </li>\n                    ))\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default PageNavigation;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Page404 from './Page/Page404';\nimport PageNavigation from './Section/PageNavigation';\nimport PageRoutes, { IPageRoute } from '../System/Routes';\nimport VINStore from '../Context/VIN/VINStore';\nimport getItem from '../Helper/Storage/getItem';\nimport { initialDecodeVIN } from '../Context/VIN/VINContext';\nimport StorageItem from '../Types/Storage/StorageItem';\n\n/**\n * @interface Props\n */\ninterface Props {\n\n}\n\nconst App: React.FC<Props> = () => {\n\n    return (\n        <>\n            <header className=\"header\">\n                <PageNavigation />\n            </header>\n            <VINStore\n                getDefaultProps={() => ({\n                    vehicleVariableList: getItem(StorageItem.VEHICLE_VARIABLE_LIST, initialDecodeVIN),\n                })}\n            >\n                <div className=\"container\">\n                    <Switch>\n                        {\n                            PageRoutes.map((route: IPageRoute, index: number) => (\n                                <Route\n                                    key={index}\n                                    exact={route.exact}\n                                    path={route.path}\n                                    render={props => <route.component {...props} />}\n                                />\n                            ))\n                        }\n                        <Route component={Page404} />\n                    </Switch>\n                </div>\n            </VINStore>\n\n        </>\n    );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './scss/app.scss';\n\nimport App from './View/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/react_context_vin\">\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}